"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import Header from "@/components/header"
import { Skeleton } from "@/components/ui/skeleton"
import {
  BarChart,
  Bar,
  Line,
  PieChart,
  Pie,
  Cell,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts"
import { Download, RefreshCw } from "lucide-react"

// „É¢„ÉÉ„ÇØ„Éá„Éº„Çø
const submissionsByMonth = [
  { name: "1Êúà", Â≠¶ÁîüÊï∞: 30 },
  { name: "2Êúà", Â≠¶ÁîüÊï∞: 35 },
  { name: "3Êúà", Â≠¶ÁîüÊï∞: 40 },
  { name: "4Êúà", Â≠¶ÁîüÊï∞: 45 },
  { name: "5Êúà", Â≠¶ÁîüÊï∞: 42 },
  { name: "6Êúà", Â≠¶ÁîüÊï∞: 48 },
  { name: "7Êúà", Â≠¶ÁîüÊï∞: 52 },
  { name: "8Êúà", Â≠¶ÁîüÊï∞: 20 },
  { name: "9Êúà", Â≠¶ÁîüÊï∞: 38 },
  { name: "10Êúà", Â≠¶ÁîüÊï∞: 42 },
  { name: "11Êúà", Â≠¶ÁîüÊï∞: 45 },
  { name: "12Êúà", Â≠¶ÁîüÊï∞: 50 },
]

const scoreDistribution = [
  { name: "90-100", value: 15 },
  { name: "80-89", value: 25 },
  { name: "70-79", value: 30 },
  { name: "60-69", value: 20 },
  { name: "0-59", value: 10 },
]

const COLORS = ["#0088FE", "#00C49F", "#FFBB28", "#FF8042", "#8884D8"]

const submissionsByAssignment = [
  { name: "Ë™≤È°å1", ÊèêÂá∫Êï∞: 42, Âπ≥Âùá„Çπ„Ç≥„Ç¢: 78 },
  { name: "Ë™≤È°å2", ÊèêÂá∫Êï∞: 38, Âπ≥Âùá„Çπ„Ç≥„Ç¢: 82 },
  { name: "Ë™≤È°å3", ÊèêÂá∫Êï∞: 40, Âπ≥Âùá„Çπ„Ç≥„Ç¢: 75 },
  { name: "Ë™≤È°å4", ÊèêÂá∫Êï∞: 35, Âπ≥Âùá„Çπ„Ç≥„Ç¢: 80 },
  { name: "Ë™≤È°å5", ÊèêÂá∫Êï∞: 30, Âπ≥Âùá„Çπ„Ç≥„Ç¢: 85 },
]

export default function StatisticsPage() {
  const [loading, setLoading] = useState(true)
  const [year, setYear] = useState("2025")

  useEffect(() => {
    // ÂÆüÈöõ„ÅÆAPI„ÅåÂÆüË£Ö„Åï„Çå„Åü„Çâ„ÄÅ„Åì„Åì„Åß„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã
    // ÁèæÂú®„ÅØ„É¢„ÉÉ„ÇØ„Éá„Éº„Çø„Çí‰ΩøÁî®
    setTimeout(() => {
      setLoading(false)
    }, 1000)
  }, [])

  return (
    <div className="flex flex-col min-h-screen">
      <Header />
      <main className="flex-1 p-6">
        <div className="max-w-7xl mx-auto space-y-6">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-bold">üìä Áµ±Ë®à„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</h1>
            <div className="flex items-center gap-2">
              <Select value={year} onValueChange={setYear}>
                <SelectTrigger className="w-[120px]">
                  <SelectValue placeholder="Âπ¥Â∫¶„ÇíÈÅ∏Êäû" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="2023">2023Âπ¥Â∫¶</SelectItem>
                  <SelectItem value="2024">2024Âπ¥Â∫¶</SelectItem>
                  <SelectItem value="2025">2025Âπ¥Â∫¶</SelectItem>
                </SelectContent>
              </Select>
              <Button variant="outline" className="flex items-center gap-2">
                <RefreshCw className="h-4 w-4" />
                Êõ¥Êñ∞
              </Button>
              <Button variant="outline" className="flex items-center gap-2">
                <Download className="h-4 w-4" />
                „Ç®„ÇØ„Çπ„Éù„Éº„Éà
              </Button>
            </div>
          </div>

          <Tabs defaultValue="overview" className="space-y-4">
            <TabsList>
              <TabsTrigger value="overview">Ê¶ÇË¶Å</TabsTrigger>
              <TabsTrigger value="submissions">ÊèêÂá∫Áä∂Ê≥Å</TabsTrigger>
              <TabsTrigger value="scores">„Çπ„Ç≥„Ç¢ÂàÜÊûê</TabsTrigger>
              <TabsTrigger value="students">Â≠¶ÁîüÂàÜÊûê</TabsTrigger>
            </TabsList>

            <TabsContent value="overview" className="space-y-4">
              {loading ? (
                <div className="grid gap-4 md:grid-cols-2">
                  <Skeleton className="h-[300px] w-full" />
                  <Skeleton className="h-[300px] w-full" />
                  <Skeleton className="h-[300px] w-full" />
                  <Skeleton className="h-[300px] w-full" />
                </div>
              ) : (
                <div className="grid gap-4 md:grid-cols-2">
                  <Card>
                    <CardHeader>
                      <CardTitle>ÊúàÂà•ÊèêÂá∫Êï∞</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="h-[300px]">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={submissionsByMonth}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" />
                            <YAxis />
                            <Tooltip />
                            <Legend />
                            <Bar dataKey="Â≠¶ÁîüÊï∞" fill="#8884d8" />
                          </BarChart>
                        </ResponsiveContainer>
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>„Çπ„Ç≥„Ç¢ÂàÜÂ∏É</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="h-[300px]">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={scoreDistribution}
                              cx="50%"
                              cy="50%"
                              labelLine={true}
                              label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}
                              outerRadius={80}
                              fill="#8884d8"
                              dataKey="value"
                            >
                              {scoreDistribution.map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                              ))}
                            </Pie>
                            <Tooltip />
                            <Legend />
                          </PieChart>
                        </ResponsiveContainer>
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>Ë™≤È°åÂà•ÊèêÂá∫Êï∞„Å®Âπ≥Âùá„Çπ„Ç≥„Ç¢</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="h-[300px]">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={submissionsByAssignment}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" />
                            <YAxis yAxisId="left" orientation="left" />
                            <YAxis yAxisId="right" orientation="right" domain={[0, 100]} />
                            <Tooltip />
                            <Legend />
                            <Bar yAxisId="left" dataKey="ÊèêÂá∫Êï∞" fill="#8884d8" />
                            <Line yAxisId="right" type="monotone" dataKey="Âπ≥Âùá„Çπ„Ç≥„Ç¢" stroke="#ff7300" />
                          </BarChart>
                        </ResponsiveContainer>
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>ÊèêÂá∫„Çø„Ç§„Éü„É≥„Ç∞ÂàÜÊûê</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="h-[300px] flex items-center justify-center">
                        <p className="text-muted-foreground">„Éá„Éº„ÇøÊ∫ñÂÇô‰∏≠...</p>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              )}
            </TabsContent>

            <TabsContent value="submissions" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>Ë™≤È°åÂà•Ë©≥Á¥∞ÊèêÂá∫Áä∂Ê≥Å</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="h-[400px]">
                    {loading ? (
                      <Skeleton className="h-full w-full" />
                    ) : (
                      <ResponsiveContainer width="100%" height="100%">
                        <BarChart data={submissionsByAssignment}>
                          <CartesianGrid strokeDasharray="3 3" />
                          <XAxis dataKey="name" />
                          <YAxis />
                          <Tooltip />
                          <Legend />
                          <Bar dataKey="ÊèêÂá∫Êï∞" fill="#8884d8" />
                        </BarChart>
                      </ResponsiveContainer>
                    )}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="scores" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>„Çπ„Ç≥„Ç¢Ë©≥Á¥∞ÂàÜÊûê</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="h-[400px]">
                    {loading ? (
                      <Skeleton className="h-full w-full" />
                    ) : (
                      <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                          <Pie
                            data={scoreDistribution}
                            cx="50%"
                            cy="50%"
                            labelLine={true}
                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}
                            outerRadius={120}
                            fill="#8884d8"
                            dataKey="value"
                          >
                            {scoreDistribution.map((entry, index) => (
                              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                            ))}
                          </Pie>
                          <Tooltip />
                          <Legend />
                        </PieChart>
                      </ResponsiveContainer>
                    )}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="students" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>Â≠¶ÁîüÂà•„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="h-[400px] flex items-center justify-center">
                    <p className="text-muted-foreground">„Éá„Éº„ÇøÊ∫ñÂÇô‰∏≠...</p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </main>
    </div>
  )
}
